{"version":3,"sources":["components/MusicSelect/ShowPlaylists.js","components/MusicSelect/ShowAlbums.js","components/Main.js","components/Navbar.js","App.js","index.js"],"names":["ShowPlaylists","props","pointerStyles","cursor","react_default","a","createElement","Fragment","className","style","onClick","clearSelectedAlbum","src","selectedAlbum","albumArtwork","alt","albumName","songs","map","song","index","key","concat","updatePlaylist","JSON","stringify","playlist","playlistIsPlaying","currentSongIndex","Object","objectSpread","paddingLeft","name","ShowAlbums","media","selectAlbum","e","stopPropagation","Main","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","_this2","fetch","then","res","json","setState","MusicSelect_ShowPlaylists","MusicSelect_ShowAlbums","Component","Navbar","App","theme","receiveStateUpdates","handleThemeChange","Navbar_Navbar","Main_Main","index_es","Number","isInteger","event","target","value","payload","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.5a4eb1eb.chunk.js","sourcesContent":["import React from 'react'\n\nconst ShowPlaylists = (props) => {\n  const pointerStyles = { cursor: 'pointer' }\n\n  return (\n    <React.Fragment>\n      <div className=\"album\">\n        <span style={pointerStyles} onClick={props.clearSelectedAlbum}>â€¹ Back to Soundtracks</span>\n        <div className=\"album-meta\">\n          <img src={props.selectedAlbum.albumArtwork} alt={props.selectedAlbum.albumName} />\n          <span>{props.selectedAlbum.albumName}</span>\n          {/* <span>{props.selectedAlbum.albumArtist}</span> */}\n        </div>\n        <div className=\"album-playlist\">\n          {props.selectedAlbum.songs.map((song, index) => (\n            <div key={`songname-${index}`} className=\"playlist-song\" onClick={() => props.updatePlaylist(props.selectedAlbum.songs, index)}>\n              {(JSON.stringify(props.playlist) === JSON.stringify(props.selectedAlbum.songs.map(song => song.src)) && props.playlistIsPlaying && props.currentSongIndex === index)\n                ? (<i className=\"fa fa-pause\" style={pointerStyles} />)\n                : (<i className=\"fa fa-play\" style={{ paddingLeft: '3px', ...pointerStyles }} />)}\n              <span style={pointerStyles}>{song.name}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default ShowPlaylists","import React from 'react'\n\nconst ShowAlbums = (props) => {\n  const pointerStyles = { cursor: 'pointer' }\n\n  return (\n    <React.Fragment>\n      <h2>Albums</h2>\n      <div className=\"grid\">{props.media.map((playlist, index) => (\n        <div className=\"playlist-square\" style={pointerStyles} onClick={() => props.selectAlbum(playlist)} key={`playlist-${index}`}>\n          <img src={playlist.albumArtwork} alt={playlist.albumName} />\n          <div className=\"play-button\" onClick={(e) => { e.stopPropagation(); props.updatePlaylist(playlist.songs) }}>\n            {(JSON.stringify(props.playlist) === JSON.stringify(playlist.songs.map(song => song.src)) && props.playlistIsPlaying)\n              ? (<i className=\"fa fa-pause\" />)\n              : (<i className=\"fa fa-play\" style={{ paddingLeft: '3px' }} />)}\n          </div>\n        </div>))}\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default ShowAlbums","import React, { Component } from 'react'\nimport ShowPlaylists from './MusicSelect/ShowPlaylists'\nimport ShowAlbums from './MusicSelect/ShowAlbums'\nimport './styles.css'\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      media: [],\n      selectedAlbum: null\n    }\n    this.selectAlbum = this.selectAlbum.bind(this)\n    this.clearSelectedAlbum = this.clearSelectedAlbum.bind(this)\n  }\n\n  componentDidMount() {\n    fetch('media.js')\n      .then(res => res.json())\n      .then(media => this.setState({ media }))\n  }\n\n  render() {\n    return (\n      <main>\n        <div className=\"albums\">\n          {this.state.selectedAlbum\n            ? <ShowPlaylists\n              clearSelectedAlbum={this.clearSelectedAlbum}\n              selectedAlbum={this.state.selectedAlbum}\n              playlist={this.props.playlist}\n              updatePlaylist={this.props.updatePlaylist}\n              playlistIsPlaying={this.props.playlistIsPlaying}\n              currentSongIndex={this.props.currentSongIndex} />\n            : <ShowAlbums\n              media={this.state.media}\n              selectAlbum={this.selectAlbum}\n              updatePlaylist={this.props.updatePlaylist}\n              currentSongIndex={this.props.currentSongIndex} \n              playlist={this.props.playlist}\n              playlistIsPlaying={this.props.playlistIsPlaying} />}\n        </div>\n      </main>\n    )\n  }\n\n  selectAlbum(selectedAlbum) {\n    this.setState({ selectedAlbum })\n  }\n\n  clearSelectedAlbum() {\n    this.setState({ selectedAlbum: null })\n  }\n}\n","import React, { Component } from 'react'\nimport './styles.css'\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <nav>\n        <div>React Media Player</div>\n        <div className=\"links\"></div>\n      </nav>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport ReactMediaVisualizer from 'react-media-visualizer'\nimport Main from './components/Main'\nimport Navbar from './components/Navbar'\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      playlist: null,\n      playlistIsPlaying: false,\n      currentSongIndex: 0,\n      theme: 'youtube'\n    }\n    this.updatePlaylist = this.updatePlaylist.bind(this)\n    this.receiveStateUpdates = this.receiveStateUpdates.bind(this)\n    this.handleThemeChange = this.handleThemeChange.bind(this)\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"react-media-vis-body\">\n          <Navbar />\n          <Main\n            updatePlaylist={this.updatePlaylist}\n            currentSongIndex={this.state.currentSongIndex}\n            playlist={this.state.playlist}\n            theme={this.state.theme}\n            handleThemeChange={this.handleThemeChange}\n            playlistIsPlaying={this.state.playlistIsPlaying} />\n        </div>\n        <ReactMediaVisualizer\n          playlist={this.state.playlist}\n          receiveStateUpdates={this.receiveStateUpdates}\n          playlistIsPlaying={this.state.playlistIsPlaying}\n          theme={this.state.theme}\n          currentSongIndex={this.state.currentSongIndex} />\n      </React.Fragment>\n    )\n  }\n\n  updatePlaylist(playlist, currentSongIndex) {\n    // New playlist received, get array containing song sources\n    playlist = playlist.map(song => song.src)\n    if (Number.isInteger(currentSongIndex)) {\n      if (JSON.stringify(playlist) !== JSON.stringify(this.state.playlist))\n        this.setState({ playlist, playlistIsPlaying: true, currentSongIndex: currentSongIndex })\n      // Not new playlist, just toggling play or pause\n      else this.setState({ playlistIsPlaying: !this.state.playlistIsPlaying })\n      // New Song index\n      if (currentSongIndex !== this.state.currentSongIndex) this.setState({ currentSongIndex })\n    } else {\n      if (JSON.stringify(playlist) !== JSON.stringify(this.state.playlist))\n        this.setState({ playlist, playlistIsPlaying: true, currentSongIndex: 0 })\n      else this.setState({ playlistIsPlaying: !this.state.playlistIsPlaying })\n    }\n  }\n\n  handleThemeChange(event) {\n    this.setState({theme: event.target.value})\n  }\n\n  receiveStateUpdates(payload) {\n    this.setState(payload)\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}